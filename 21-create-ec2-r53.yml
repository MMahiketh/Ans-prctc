- name: Create ec2 instances and route 53 records
  hosts: local
  connection: local
  vars:
    REGION: us-east-1
    AMI_ID_DEVOPS: ami-09c813fb71547fc4f
    AMI_ID_REDHAT: ami-0583d8c7a9c35822c
    INSTANCE_TYPE: t2.micro
    KEY_NAME: ans-key
    VPC_ID_DEF: vpc-004eaa275ecef58a0
    SG_ALLOW_MY_IP: sg-0674a0960a1751cd3
    SG_ALLOW_PRI_IP: sg-0df6058723e0ea39a
    SUBNET_ID: subnet-0d7b4d5d830114b0f
    INSTANCES:
    - database
    - backend
    - frontend
    zone: mahdo.site
  tasks:
  - name: Install aws dependencies (botocore & boto3) using ansible
    ansible.builtin.pip:
      name:
        - botocore
        - boto3

  - name: Create ec2 instances
    amazon.aws.ec2_instance:
      name: "{{item}}"
      region: "{{REGION}}"
      key_name: "{{KEY_NAME}}"
      vpc_subnet_id: "{{SUBNET_ID}}"
      instance_type: "{{INSTANCE_TYPE}}"
      security_group: "{{SG_ALLOW_PRI_IP}}"
      image_id: "{{AMI_ID_REDHAT}}"
    loop: "{{INSTANCES}}"
    register: ec2_out

  - name: Read output of ec2_out
    ansible.builtin.debug:
      msg: "{{ec2_out}}"

  - name: Create or update route 53 records of ec2's private ip
    amazon.aws.route53:
      zone: "{{zone}}"
      record: "{{item.item}}.{{zone}}"
      type: A
      ttl: 300
      value: "{{item.instances[0].private_ip_address}}"
      wait: true
      overwrite: true
      state: present
    loop: "{{ec2_out.results}}"

  - name: Create or update route 53 of frontend public ip
    amazon.aws.route53:
      zone: "{{zone}}"
      record: "{{zone}}"
      type: A
      ttl: 300
      value: "{{item.instances[0].public_ip_address}}"
      wait: true
      overwrite: true
      state: present
    loop: "{{ec2_out.results}}"
    when: item.item == "frontend"

  - name: Add SG to frontend to view website
    amazon.aws.ec2_instance:
      instance_ids: "{{item.instance_ids}}"
      security_groups:
      - "{{SG_ALLOW_MY_IP}}"
      - "{{SG_ALLOW_PRI_IP"
    loop: "{{ec2_out.results}}"
    when: item.item == "frontend"
